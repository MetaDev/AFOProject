idea to keep in mind: the ae is used to impute data, the more it understands the underlying structure
of the data, generalizes, the better it will work

fix git push!

find relevant sensors
feature selection with different scoring metrics
test for each axis of a sensor
split preporcessing steps of data_prep file in different methods
compare performance in 
1. -> zero out and measure difference in mse, visualise with the coord of nodes
do this in triples of inputs for 3D visualisation
2. -> use gradient for multivariate importance in neural net


do some refactoring by using some keras code: https://blog.keras.io/keras-as-a-simplified-interface-to-tensorflow-tutorial.html
and add some more advanced features like dropout and early stopping

train ae on different types of missing data
training same network on different permutations of missing sensors
-> dropout

use 3D autoencoder
https://stackoverflow.com/questions/41830723/batch-normalization-with-3d-convolutions-in-tensorflow


fix rotation prediction, different position of sensors (brute force?)

