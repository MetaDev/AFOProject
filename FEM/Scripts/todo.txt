idea to keep in mind: the ae is used to impute data, the more it understands the underlying structure
of the data, generalizes, the better it will work

test the joint learning of the regr and ae

generate more data in freecad

train ae on different types of missing data

split test and training set with the same indices over all networks

add early stopping to regression training

compare between training of imputed and non imputed
and compare test on imputed and non imputed (in product)

training same network on different permutations of missing sensors

train ae and other network and to end

do some refactoring by using some keras code: https://blog.keras.io/keras-as-a-simplified-interface-to-tensorflow-tutorial.html

use 3D autoencoder
https://stackoverflow.com/questions/41830723/batch-normalization-with-3d-convolutions-in-tensorflow



fix rotation prediction, different position of sensors (brute force?)


find relevance of sensor thourgh feature relevance analysis: https://www.analyticsvidhya.com/blog/2016/12/introduction-to-feature-selection-methods-with-an-example-or-how-to-select-the-right-variables/
optimize sensor placement with bayes optimisation